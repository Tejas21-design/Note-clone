{"ast":null,"code":"import _defineProperty from \"C:\\\\project\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\project\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\project\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\project\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\project\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\project\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\project\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\project\\\\my-app\\\\src\\\\Memegenerator.js\";\nimport React, { Component } from \"react\";\n\nvar Memegenerator = /*#__PURE__*/function (_Component) {\n  _inherits(Memegenerator, _Component);\n\n  function Memegenerator() {\n    var _this;\n\n    _classCallCheck(this, Memegenerator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Memegenerator).call(this));\n    _this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      rendering: \"http//1.imgflip.com/1bij.jpg\",\n      url: \" https://api.imgflip.com/get_memes\",\n      allMemeImgs: []\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Memegenerator, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"curl https://api.imgflip.com/get_memes\").then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        var memes = response.data.memes;\n\n        _this2.setState({\n          allMemeImgs: memes\n        });\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      this.setState(_defineProperty({}, name, value));\n      console.log(event.target);\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault(); //random no of img\n\n      var randNum = Math.floor(Math.random() * this.state.allMemeImgs.length); //get the random meme  from index\n\n      var randMemeImg = this.state.allMemeImgs[randNum].url; //set 'randomImg' to the '.url' of the random items that i grabbed\n\n      this.setState({\n        randomImg: randMemeImg\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        className: \"meme-form\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"topText\",\n        placeholder: \"Top-Text\",\n        value: this.state.topText,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"bottomText\",\n        placeholder: \"BoTTom\",\n        value: this.state.bottomText,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }\n      }, \"Generate\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"memes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: this.state.randomImg,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, this.state.topText), /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"bottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, this.state.bottomText)));\n    }\n  }]);\n\n  return Memegenerator;\n}(Component);\n\nexport default Memegenerator;","map":{"version":3,"sources":["C:/project/my-app/src/Memegenerator.js"],"names":["React","Component","Memegenerator","state","topText","bottomText","rendering","url","allMemeImgs","handleChange","bind","handleSubmit","fetch","then","response","json","memes","data","setState","event","target","name","value","console","log","preventDefault","randNum","Math","floor","random","length","randMemeImg","randomImg"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\r\n\r\nclass Memegenerator extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state ={\r\n            topText:\"\",\r\n            bottomText:\"\",\r\n            rendering:\"http//1.imgflip.com/1bij.jpg\",\r\n            url: \" https://api.imgflip.com/get_memes\",\r\n            allMemeImgs:[]\r\n\r\n        }\r\n        this.handleChange=this.handleChange.bind(this)\r\n        this.handleSubmit=this.handleSubmit.bind(this)\r\n\r\n    }\r\n    componentDidMount(){\r\n        \r\n        fetch(\"curl https://api.imgflip.com/get_memes\")\r\n        .then(response=>response.json())\r\n        .then(response=>{\r\n            const{memes}=response.data\r\n\r\n            this.setState({allMemeImgs:memes})\r\n        })\r\n    }\r\n     handleChange(event){\r\n         const {name, value}=event.target\r\n         this.setState({ [name]: value})\r\n         console.log(event.target)\r\n     }\r\n     handleSubmit(event){\r\n      event.preventDefault()\r\n      //random no of img\r\n      const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\r\n\r\n      //get the random meme  from index\r\n      const randMemeImg = this.state.allMemeImgs[randNum].url\r\n      //set 'randomImg' to the '.url' of the random items that i grabbed\r\n      this.setState({randomImg:randMemeImg})\r\n     }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <form className=\"meme-form\" onSubmit={this.handleSubmit}>\r\n                    \r\n                        <input \r\n                         type=\"text\"\r\n                        name=\"topText\"\r\n                        placeholder=\"Top-Text\"\r\n                        value={this.state.topText}\r\n                        onChange={this.handleChange}\r\n\r\n\r\n                        />\r\n\r\n                        <input \r\n                         type=\"text\"\r\n                        name=\"bottomText\" \r\n                        placeholder=\"BoTTom\"\r\n                        value={this.state.bottomText}  \r\n                        onChange={this.handleChange}                     \r\n                        />\r\n                    \r\n                  <button >Generate</button>\r\n                </form>\r\n                <div className=\"memes\">\r\n                    <img src={this.state.randomImg} alt=\"\"/>\r\n                    <h2 className=\"top\">{this.state.topText}</h2>\r\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Memegenerator"]},"metadata":{},"sourceType":"module"}